---
- id: format-shell
  name: format-shell
  description: "Format the project's shell scripts."
  entry: --entrypoint=shfmt --env=FORCE_COLOR=1 ghcr.io/cicd-tools-org/cicd-tools:master
  args:
    - "-w"
    - "--indent=2"
    - "-ci"
    - "-sr"
  exclude: "^\\.cicd-tools/boxes/.+$"
  files: "^.+\\.(bash|sh)$"
  language: docker_image
  pass_filenames: true
  stages: [commit]
- id: format-toml
  name: format-toml
  description: "Format the project's TOML files."
  entry: --entrypoint=tomll --env=FORCE_COLOR=1 ghcr.io/cicd-tools-org/cicd-tools:master
  files: "^.+\\.toml$"
  language: docker_image
  pass_filenames: true
  stages: [commit]
- id: lint-ansible
  name: lint-ansible
  description: "Check the collection or role for Ansible best practices."
  entry: ./.cicd-tools/boxes/bootstrap/pre-commit/lint-ansible.sh
  files: "^.+\\.(yaml|yml)$|^.ansible-lint$"
  language: system
  pass_filenames: false
- id: lint-github-workflow
  name: lint-github-workflow
  description: "Lint the project's GitHub workflow files."
  entry: --entrypoint=actionlint ghcr.io/cicd-tools-org/cicd-tools:master
  args:
    - "-color"
    - "-config-file"
    - ".cicd-tools/configuration/actionlint.yaml"
  files: "^.github/workflows/.+\\.(yaml|yml)$"
  language: docker_image
  pass_filenames: false
  stages: [commit]
- id: lint-github-workflow-header
  name: lint-github-workflow-header
  description: "Lint the headers of the project's GitHub workflow files."
  entry: ./.cicd-tools/boxes/bootstrap/pre-commit/lint-github-workflow-header.sh
  files: "^.github/workflows/.+\\.(yaml|yml)$"
  language: system
  pass_filenames: true
  stages: [commit]
- id: lint-markdown
  name: lint-markdown
  description: "Lint the Markdown files."
  files: "^.+\\.md$"
  entry: ghcr.io/igorshubovych/markdownlint-cli:v0.35.0@sha256:22cf4699a448a7bbc311a940e0600019423d7671cbedae9c35cd32b51f560350
  language: docker_image
  pass_filenames: true
  stages: [commit]
- id: lint-shell
  name: lint-shell
  description: "Lint the project's shell scripts."
  entry: --entrypoint=shellcheck ghcr.io/cicd-tools-org/cicd-tools:master
  args:
    - "--color=always"
    - "--source-path=SCRIPTDIR"
    - "--exclude=SC2317"
    - "-x"
  exclude: "^\\.cicd-tools/boxes/.+$"
  files: "^.+\\.(bash|sh)$"
  language: docker_image
  pass_filenames: true
  stages: [commit]
- id: security-credentials
  name: security-credentials
  description: "Scan codebase for checked in credentials."
  entry: trufflesecurity/trufflehog:3.63.2@sha256:16c1cf07b7142037a2859d4ad0f51c40603e7e58703ddb8bd80cf40e6af51f44
  args:
    - "git"
    - "file://."
    - "--fail"
    - "--no-update"
    - "--debug"
    - "--max-depth=500"
  language: docker_image
  pass_filenames: false
  stages: [commit]
- id: spelling-commit-message
  name: spelling-commit-message
  description: "Check the spelling on the commit message."
  entry: ./.cicd-tools/boxes/bootstrap/pre-commit/spelling-commit-message.sh
  args:
    - "ghcr.io/cicd-tools-org/cicd-tools:master"
  language: system
  pass_filenames: true
  stages: [commit-msg]
  require_serial: true
  always_run: true
- id: spelling-markdown
  name: spelling-markdown
  description: "Spellcheck the Markdown files."
  entry: --entrypoint=vale ghcr.io/cicd-tools-org/cicd-tools:master
  files: "^.+\\.md$"
  language: docker_image
  pass_filenames: true
  stages: [commit]
- id: spelling-vale-synchronize
  name: spelling-vale-synchronize
  description: "Download any required vale packages."
  entry: --entrypoint=vale ghcr.io/cicd-tools-org/cicd-tools:master
  args:
    - "sync"
  language: docker_image
  pass_filenames: false
  stages: [manual]
